node n1 {
    type hub
    network-config {
	hostname sw0
	!
    }
    canvas c1
    iconcoords {336.0 266.0}
    labelcoords {336.0 290.0}
    interface-peer {e0 n16}
    interface-peer {e1 n17}
    interface-peer {e2 n22}
    interface-peer {e3 n23}
}

node n2 {
    type hub
    network-config {
	hostname sw1
	!
    }
    canvas c1
    iconcoords {915.0 105.0}
    labelcoords {915.0 129.0}
    interface-peer {e0 n6}
    interface-peer {e1 n7}
    interface-peer {e2 n8}
    interface-peer {e3 n9}
    interface-peer {e4 n18}
}

node n3 {
    type hub
    network-config {
	hostname sw2
	!
    }
    canvas c1
    iconcoords {912.0 242.0}
    labelcoords {912.0 266.0}
    interface-peer {e0 n6}
    interface-peer {e1 n7}
    interface-peer {e2 n8}
    interface-peer {e3 n9}
    interface-peer {e4 n19}
}

node n4 {
    type hub
    network-config {
	hostname sw3
	!
    }
    canvas c1
    iconcoords {914.0 383.0}
    labelcoords {914.0 407.0}
    interface-peer {e0 n6}
    interface-peer {e1 n7}
    interface-peer {e2 n8}
    interface-peer {e3 n9}
    interface-peer {e4 n20}
}

node n5 {
    type hub
    network-config {
	hostname sw4
	!
    }
    canvas c1
    iconcoords {917.0 529.0}
    labelcoords {917.0 553.0}
    interface-peer {e0 n6}
    interface-peer {e1 n7}
    interface-peer {e2 n8}
    interface-peer {e3 n9}
    interface-peer {e4 n21}
}

node n6 {
    type router
    model router
    network-config {
	hostname r8
	!
	interface eth5
	 ip address 10.0.11.2/24
	 ipv6 address 2001:11::2/64
	!
	interface eth4
	 ip address 10.0.8.2/24
	 ipv6 address 2001:8::2/64
	!
	interface eth3
	 ip address 10.0.3.1/24
	 ipv6 address 2001:3::1/64
	!
	interface eth2
	 ip address 10.0.2.1/24
	 ipv6 address 2001:2::1/64
	!
	interface eth1
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001:0::1/64
	!
    }
    canvas c1
    iconcoords {770.0 146.0}
    labelcoords {770.0 178.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n3}
    interface-peer {eth2 n4}
    interface-peer {eth3 n5}
    interface-peer {eth4 n10}
    interface-peer {eth5 n11}
    services {FRROpenFabric FRRzebra IPForward}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.0.1/24
	  ipv6 address 2001::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.1.1/24
	  ipv6 address 2001:1::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.2.1/24
	  ipv6 address 2001:2::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.3.1/24
	  ipv6 address 2001:3::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth4
	  ip address 10.0.8.2/24
	  ipv6 address 2001:8::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth5
	  ip address 10.0.11.2/24
	  ipv6 address 2001:11::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0008.00
	!
	
	}
    }
}

node n7 {
    type router
    model router
    network-config {
	hostname r9
	!
	interface eth6
	 ip address 10.0.12.2/24
	 ipv6 address 2001:12::2/64
	!
	interface eth5
	 ip address 10.0.9.2/24
	 ipv6 address 2001:9::2/64
	!
	interface eth4
	 ip address 10.0.6.2/24
	 ipv6 address 2001:6::2/64
	!
	interface eth3
	 ip address 10.0.3.2/24
	 ipv6 address 2001:3::2/64
	!
	interface eth2
	 ip address 10.0.2.2/24
	 ipv6 address 2001:2::2/64
	!
	interface eth1
	 ip address 10.0.1.2/24
	 ipv6 address 2001:1::2/64
	!
	interface eth0
	 ip address 10.0.0.2/24
	 ipv6 address 2001:0::2/64
	!
    }
    canvas c1
    iconcoords {770.0 245.0}
    labelcoords {770.0 277.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n3}
    interface-peer {eth2 n4}
    interface-peer {eth3 n5}
    interface-peer {eth4 n11}
    interface-peer {eth5 n10}
    interface-peer {eth6 n12}
    services {FRROpenFabric FRRzebra IPForward}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.0.2/24
	  ipv6 address 2001::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.1.2/24
	  ipv6 address 2001:1::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.2.2/24
	  ipv6 address 2001:2::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.3.2/24
	  ipv6 address 2001:3::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth4
	  ip address 10.0.6.2/24
	  ipv6 address 2001:6::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth5
	  ip address 10.0.9.2/24
	  ipv6 address 2001:9::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth6
	  ip address 10.0.12.2/24
	  ipv6 address 2001:12::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0009.00
	!
	
	}
    }
}

node n8 {
    type router
    model router
    network-config {
	hostname r10
	!
	interface eth6
	 ip address 10.0.10.2/24
	 ipv6 address 2001:10::2/64
	!
	interface eth5
	 ip address 10.0.7.2/24
	 ipv6 address 2001:7::2/64
	!
	interface eth4
	 ip address 10.0.4.2/24
	 ipv6 address 2001:4::2/64
	!
	interface eth3
	 ip address 10.0.3.3/24
	 ipv6 address 2001:3::3/64
	!
	interface eth2
	 ip address 10.0.2.3/24
	 ipv6 address 2001:2::3/64
	!
	interface eth1
	 ip address 10.0.1.3/24
	 ipv6 address 2001:1::3/64
	!
	interface eth0
	 ip address 10.0.0.3/24
	 ipv6 address 2001:0::3/64
	!
    }
    canvas c1
    iconcoords {769.0 335.0}
    labelcoords {769.0 367.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n3}
    interface-peer {eth2 n4}
    interface-peer {eth3 n5}
    interface-peer {eth4 n12}
    interface-peer {eth5 n11}
    interface-peer {eth6 n10}
    services {FRROpenFabric FRRzebra IPForward}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.0.3/24
	  ipv6 address 2001::3/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.1.3/24
	  ipv6 address 2001:1::3/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.2.3/24
	  ipv6 address 2001:2::3/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.3.3/24
	  ipv6 address 2001:3::3/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth4
	  ip address 10.0.4.2/24
	  ipv6 address 2001:4::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth5
	  ip address 10.0.7.2/24
	  ipv6 address 2001:7::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth6
	  ip address 10.0.10.2/24
	  ipv6 address 2001:10::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0010.00
	!
	
	}
    }
}

node n9 {
    type router
    model router
    network-config {
	hostname r11
	!
	interface eth4
	 ip address 10.0.5.2/24
	 ipv6 address 2001:5::2/64
	!
	interface eth3
	 ip address 10.0.1.4/24
	 ipv6 address 2001:1::4/64
	!
	interface eth2
	 ip address 10.0.0.4/24
	 ipv6 address 2001:0::4/64
	!
	interface eth1
	 ip address 10.0.2.4/24
	 ipv6 address 2001:2::4/64
	!
	interface eth0
	 ip address 10.0.3.4/24
	 ipv6 address 2001:3::4/64
	!
    }
    canvas c1
    iconcoords {771.0 438.0}
    labelcoords {771.0 470.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n4}
    interface-peer {eth2 n2}
    interface-peer {eth3 n3}
    interface-peer {eth4 n12}
    services {FRROpenFabric FRRzebra IPForward}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.3.4/24
	  ipv6 address 2001:3::4/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.2.4/24
	  ipv6 address 2001:2::4/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.0.4/24
	  ipv6 address 2001::4/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.1.4/24
	  ipv6 address 2001:1::4/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth4
	  ip address 10.0.5.2/24
	  ipv6 address 2001:5::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0011.00
	!
	
	}
    }
}

node n10 {
    type router
    model router
    network-config {
	hostname r5
	!
	interface eth4
	 ip address 10.0.17.2/24
	 ipv6 address 2001:17::2/64
	!
	interface eth3
	 ip address 10.0.14.2/24
	 ipv6 address 2001:14::2/64
	!
	interface eth2
	 ip address 10.0.10.1/24
	 ipv6 address 2001:10::1/64
	!
	interface eth1
	 ip address 10.0.9.1/24
	 ipv6 address 2001:9::1/64
	!
	interface eth0
	 ip address 10.0.8.1/24
	 ipv6 address 2001:8::1/64
	!
    }
    canvas c1
    iconcoords {676.0 195.0}
    labelcoords {676.0 227.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n7}
    interface-peer {eth2 n8}
    interface-peer {eth3 n15}
    interface-peer {eth4 n13}
    services {FRROpenFabric FRRzebra IPForward}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.8.1/24
	  ipv6 address 2001:8::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.9.1/24
	  ipv6 address 2001:9::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.10.1/24
	  ipv6 address 2001:10::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.14.2/24
	  ipv6 address 2001:14::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth4
	  ip address 10.0.17.2/24
	  ipv6 address 2001:17::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0005.00
	!
	
	}
    }
}

node n11 {
    type router
    model router
    network-config {
	hostname r6
	!
	interface eth4
	 ip address 10.0.16.2/24
	 ipv6 address 2001:16::2/64
	!
	interface eth3
	 ip address 10.0.13.2/24
	 ipv6 address 2001:13::2/64
	!
	interface eth2
	 ip address 10.0.11.1/24
	 ipv6 address 2001:11::1/64
	!
	interface eth1
	 ip address 10.0.7.1/24
	 ipv6 address 2001:7::1/64
	!
	interface eth0
	 ip address 10.0.6.1/24
	 ipv6 address 2001:6::1/64
	!
    }
    canvas c1
    iconcoords {673.0 291.0}
    labelcoords {673.0 323.0}
    interface-peer {eth0 n7}
    interface-peer {eth1 n8}
    interface-peer {eth2 n6}
    interface-peer {eth3 n15}
    interface-peer {eth4 n14}
    services {FRROpenFabric FRRzebra IPForward}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.6.1/24
	  ipv6 address 2001:6::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.7.1/24
	  ipv6 address 2001:7::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.11.1/24
	  ipv6 address 2001:11::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.13.2/24
	  ipv6 address 2001:13::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth4
	  ip address 10.0.16.2/24
	  ipv6 address 2001:16::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0006.00
	!
	
	}
    }
}

node n12 {
    type router
    model router
    network-config {
	hostname r7
	!
	interface eth4
	 ip address 10.0.18.2/24
	 ipv6 address 2001:18::2/64
	!
	interface eth3
	 ip address 10.0.15.2/24
	 ipv6 address 2001:15::2/64
	!
	interface eth2
	 ip address 10.0.12.1/24
	 ipv6 address 2001:12::1/64
	!
	interface eth1
	 ip address 10.0.5.1/24
	 ipv6 address 2001:5::1/64
	!
	interface eth0
	 ip address 10.0.4.1/24
	 ipv6 address 2001:4::1/64
	!
    }
    canvas c1
    iconcoords {672.0 389.0}
    labelcoords {672.0 421.0}
    interface-peer {eth0 n8}
    interface-peer {eth1 n9}
    interface-peer {eth2 n7}
    interface-peer {eth3 n14}
    interface-peer {eth4 n13}
    services {FRROpenFabric FRRzebra IPForward}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.4.1/24
	  ipv6 address 2001:4::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.5.1/24
	  ipv6 address 2001:5::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.12.1/24
	  ipv6 address 2001:12::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.15.2/24
	  ipv6 address 2001:15::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth4
	  ip address 10.0.18.2/24
	  ipv6 address 2001:18::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0007.00
	!
	
	}
    }
}

node n13 {
    type router
    model router
    network-config {
	hostname r3
	!
	interface eth3
	 ip address 10.0.24.2/24
	 ipv6 address 2001:24::2/64
	!
	interface eth2
	 ip address 10.0.20.2/24
	 ipv6 address 2001:20::2/64
	!
	interface eth1
	 ip address 10.0.18.1/24
	 ipv6 address 2001:18::1/64
	!
	interface eth0
	 ip address 10.0.17.1/24
	 ipv6 address 2001:17::1/64
	!
    }
    canvas c1
    iconcoords {563.0 292.0}
    labelcoords {563.0 324.0}
    interface-peer {eth0 n10}
    interface-peer {eth1 n12}
    interface-peer {eth2 n16}
    services {FRROpenFabric FRRzebra IPForward}
    interface-peer {eth3 n23}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.17.1/24
	  ipv6 address 2001:17::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.18.1/24
	  ipv6 address 2001:18::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.20.2/24
	  ipv6 address 2001:20::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.24.2/24
	  ipv6 address 2001:24::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0003.00
	!
	
	}
    }
}

node n14 {
    type router
    model router
    network-config {
	hostname r2
	!
	interface eth3
	 ip address 10.0.23.2/24
	 ipv6 address 2001:23::2/64
	!
	interface eth2
	 ip address 10.0.19.2/24
	 ipv6 address 2001:19::2/64
	!
	interface eth1
	 ip address 10.0.16.1/24
	 ipv6 address 2001:16::1/64
	!
	interface eth0
	 ip address 10.0.15.1/24
	 ipv6 address 2001:15::1/64
	!
    }
    canvas c1
    iconcoords {562.0 198.0}
    labelcoords {562.0 230.0}
    interface-peer {eth0 n12}
    interface-peer {eth1 n11}
    interface-peer {eth2 n16}
    services {FRROpenFabric FRRzebra IPForward}
    interface-peer {eth3 n23}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.15.1/24
	  ipv6 address 2001:15::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.16.1/24
	  ipv6 address 2001:16::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.19.2/24
	  ipv6 address 2001:19::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.23.2/24
	  ipv6 address 2001:23::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0002.00
	!
	
	}
    }
}

node n15 {
    type router
    model router
    network-config {
	hostname r4
	!
	interface eth3
	 ip address 10.0.25.2/24
	 ipv6 address 2001:25::2/64
	!
	interface eth2
	 ip address 10.0.21.2/24
	 ipv6 address 2001:21::2/64
	!
	interface eth1
	 ip address 10.0.14.1/24
	 ipv6 address 2001:14::1/64
	!
	interface eth0
	 ip address 10.0.13.1/24
	 ipv6 address 2001:13::1/64
	!
    }
    canvas c1
    iconcoords {556.0 388.0}
    labelcoords {556.0 420.0}
    interface-peer {eth0 n11}
    interface-peer {eth1 n10}
    interface-peer {eth2 n16}
    services {FRROpenFabric FRRzebra IPForward}
    interface-peer {eth3 n23}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.13.1/24
	  ipv6 address 2001:13::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.14.1/24
	  ipv6 address 2001:14::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.21.2/24
	  ipv6 address 2001:21::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.25.2/24
	  ipv6 address 2001:25::2/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0004.00
	!
	
	}
    }
}

node n16 {
    type router
    model router
    network-config {
	hostname r1
	!
	interface eth3
	 ip address 10.0.22.1/24
	 ipv6 address 2001:22::1/64
	!
	interface eth2
	 ip address 10.0.21.1/24
	 ipv6 address 2001:21::1/64
	!
	interface eth1
	 ip address 10.0.20.1/24
	 ipv6 address 2001:20::1/64
	!
	interface eth0
	 ip address 10.0.19.1/24
	 ipv6 address 2001:19::1/64
	!
    }
    canvas c1
    iconcoords {453.0 221.0}
    labelcoords {453.0 253.0}
    interface-peer {eth0 n14}
    interface-peer {eth1 n13}
    interface-peer {eth2 n15}
    interface-peer {eth3 n1}
    services {FRROpenFabric FRRzebra IPForward}
    custom-config {
	custom-config-id service:FRRzebra
	custom-command FRRzebra
	config {
	files=('/usr/local/etc/frr/frr.conf', 'frrboot.sh', '/usr/local/etc/frr/vtysh.conf', '/usr/local/etc/frr/daemons', )
	}
    }
    custom-config {
	custom-config-id service:FRRzebra:/usr/local/etc/frr/frr.conf
	custom-command /usr/local/etc/frr/frr.conf
	config {
	interface eth0
	  ip address 10.0.19.1/24
	  ipv6 address 2001:19::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth1
	  ip address 10.0.20.1/24
	  ipv6 address 2001:20::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth2
	  ip address 10.0.21.1/24
	  ipv6 address 2001:21::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	interface eth3
	  ip address 10.0.22.1/24
	  ipv6 address 2001:22::1/64
	  ip router openfabric 1
	  ipv6 router openfabric 1
	!
	router openfabric 1
	  net 47.0000.0000.0000.0001.00
	!
	
	}
    }
}

node n17 {
    type router
    model PC
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.22.20/24
	 ipv6 address 2001:22::20/64
	!
    }
    canvas c1
    iconcoords {231.0 266.0}
    labelcoords {231.0 298.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:atd
	custom-command atd
	config {
	files=('startatd.sh', )
	}
    }
    custom-config {
	custom-config-id service:atd:startatd.sh
	custom-command startatd.sh
	config {
	#!/bin/bash
	
	while true; do
	    curl -o /tmp/test-$(date +%s).txt 10.0.0.10/example.txt
	    curl -o /tmp/test-$(date +%s).txt 10.0.2.10/example.txt
	    sleep 5
	done
	
	
	}
    }
    services {atd DefaultRoute}
}

node n18 {
    type router
    model host
    network-config {
	hostname s1
	!
	interface eth0
	 ipv6 address 2001:0::10/64
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {1027.0 105.0}
    labelcoords {1027.0 137.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', '/var/www/example.txt', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/etc/apache2/apache2.conf
	custom-command /etc/apache2/apache2.conf
	config {
	# apache2.conf generated by utility.py:HttpService
	Mutex file:${APACHE_LOCK_DIR} default
	PidFile ${APACHE_PID_FILE}
	Timeout 300
	KeepAlive On
	MaxKeepAliveRequests 100
	KeepAliveTimeout 5
	LoadModule mpm_worker_module /usr/lib/apache2/modules/mod_mpm_worker.so
	
	<IfModule mpm_prefork_module>
	    StartServers          5
	    MinSpareServers       5
	    MaxSpareServers      10
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	<IfModule mpm_worker_module>
	    StartServers          2
	    MinSpareThreads      25
	    MaxSpareThreads      75
	    ThreadLimit          64
	    ThreadsPerChild      25
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	<IfModule mpm_event_module>
	    StartServers          2
	    MinSpareThreads      25
	    MaxSpareThreads      75
	    ThreadLimit          64
	    ThreadsPerChild      25
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	User ${APACHE_RUN_USER}
	Group ${APACHE_RUN_GROUP}
	
	AccessFileName .htaccess
	
	<Files ~ "^\.ht">
	    Require all denied
	</Files>
	
	DefaultType None
	
	HostnameLookups Off
	
	ErrorLog ${APACHE_LOG_DIR}/error.log
	LogLevel warn
	
	#Include mods-enabled/*.load
	#Include mods-enabled/*.conf
	LoadModule alias_module /usr/lib/apache2/modules/mod_alias.so
	LoadModule auth_basic_module /usr/lib/apache2/modules/mod_auth_basic.so
	LoadModule authz_core_module /usr/lib/apache2/modules/mod_authz_core.so
	LoadModule authz_host_module /usr/lib/apache2/modules/mod_authz_host.so
	LoadModule authz_user_module /usr/lib/apache2/modules/mod_authz_user.so
	LoadModule autoindex_module /usr/lib/apache2/modules/mod_autoindex.so
	LoadModule dir_module /usr/lib/apache2/modules/mod_dir.so
	LoadModule env_module /usr/lib/apache2/modules/mod_env.so
	
	NameVirtualHost *:80
	Listen 80
	
	<IfModule mod_ssl.c>
	    Listen 443
	</IfModule>
	<IfModule mod_gnutls.c>
	    Listen 443
	</IfModule>
	
	LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
	LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
	LogFormat "%h %l %u %t \"%r\" %>s %O" common
	LogFormat "%{Referer}i -> %U" referer
	LogFormat "%{User-agent}i" agent
	
	ServerTokens OS
	ServerSignature On
	TraceEnable Off
	
	<VirtualHost *:80>
	    ServerAdmin webmaster@localhost
	    DocumentRoot /var/www
	    <Directory />
	        Options FollowSymLinks
	        AllowOverride None
	    </Directory>
	    <Directory /var/www/>
	        Options Indexes FollowSymLinks MultiViews
	        AllowOverride All
			Require all granted
	    </Directory>
	    <Directory /var/www/uploads>
	    	Options +Indexes
	    	AllowOverride None
	    	Require all granted
	    	<LimitExcept GET POST PUT>
	        		Require all granted
	    	</LimitExcept>
	    </Directory>
	    ErrorLog ${APACHE_LOG_DIR}/error.log
	    LogLevel warn
	    CustomLog ${APACHE_LOG_DIR}/access.log combined
	</VirtualHost>
	
	}
    }
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	files=('vsftpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	write_enable=YES
	anon_upload_enable=YES
	anon_mkdir_write_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	}
    }
    services {DefaultRoute FTP HTTP SSH}
}

node n19 {
    type router
    model host
    network-config {
	hostname s2
	!
	interface eth0
	 ipv6 address 2001:1::10/64
	 ip address 10.0.1.10/24
	!
    }
    canvas c1
    iconcoords {1026.0 242.0}
    labelcoords {1026.0 274.0}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	files=('vsftpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	write_enable=YES
	anon_upload_enable=YES
	anon_mkdir_write_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	
	}
    }
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', '/var/www/example.txt', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/etc/apache2/apache2.conf
	custom-command /etc/apache2/apache2.conf
	config {
	# apache2.conf generated by utility.py:HttpService
	Mutex file:${APACHE_LOCK_DIR} default
	PidFile ${APACHE_PID_FILE}
	Timeout 300
	KeepAlive On
	MaxKeepAliveRequests 100
	KeepAliveTimeout 5
	LoadModule mpm_worker_module /usr/lib/apache2/modules/mod_mpm_worker.so
	
	<IfModule mpm_prefork_module>
	    StartServers          5
	    MinSpareServers       5
	    MaxSpareServers      10
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	<IfModule mpm_worker_module>
	    StartServers          2
	    MinSpareThreads      25
	    MaxSpareThreads      75
	    ThreadLimit          64
	    ThreadsPerChild      25
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	<IfModule mpm_event_module>
	    StartServers          2
	    MinSpareThreads      25
	    MaxSpareThreads      75
	    ThreadLimit          64
	    ThreadsPerChild      25
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	User ${APACHE_RUN_USER}
	Group ${APACHE_RUN_GROUP}
	
	AccessFileName .htaccess
	
	<Files ~ "^\.ht">
	    Require all denied
	</Files>
	
	DefaultType None
	
	HostnameLookups Off
	
	ErrorLog ${APACHE_LOG_DIR}/error.log
	LogLevel warn
	
	#Include mods-enabled/*.load
	#Include mods-enabled/*.conf
	LoadModule alias_module /usr/lib/apache2/modules/mod_alias.so
	LoadModule auth_basic_module /usr/lib/apache2/modules/mod_auth_basic.so
	LoadModule authz_core_module /usr/lib/apache2/modules/mod_authz_core.so
	LoadModule authz_host_module /usr/lib/apache2/modules/mod_authz_host.so
	LoadModule authz_user_module /usr/lib/apache2/modules/mod_authz_user.so
	LoadModule autoindex_module /usr/lib/apache2/modules/mod_autoindex.so
	LoadModule dir_module /usr/lib/apache2/modules/mod_dir.so
	LoadModule env_module /usr/lib/apache2/modules/mod_env.so
	
	NameVirtualHost *:80
	Listen 80
	
	<IfModule mod_ssl.c>
	    Listen 443
	</IfModule>
	<IfModule mod_gnutls.c>
	    Listen 443
	</IfModule>
	
	LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
	LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
	LogFormat "%h %l %u %t \"%r\" %>s %O" common
	LogFormat "%{Referer}i -> %U" referer
	LogFormat "%{User-agent}i" agent
	
	ServerTokens OS
	ServerSignature On
	TraceEnable Off
	
	<VirtualHost *:80>
	    ServerAdmin webmaster@localhost
	    DocumentRoot /var/www
	    <Directory />
	        Options FollowSymLinks
	        AllowOverride None
	    </Directory>
	    <Directory /var/www/>
	        Options Indexes FollowSymLinks MultiViews
	        AllowOverride All
			Require all granted
	    </Directory>
	    <Directory /var/www/uploads>
	    	Options +Indexes
	    	AllowOverride None
	    	Require all granted
	    	<LimitExcept GET POST PUT>
	        		Require all granted
	    	</LimitExcept>
	    </Directory>
	    ErrorLog ${APACHE_LOG_DIR}/error.log
	    LogLevel warn
	    CustomLog ${APACHE_LOG_DIR}/access.log combined
	</VirtualHost>
	
	}
    }
    services {DefaultRoute FTP HTTP SSH}
}

node n20 {
    type router
    model host
    network-config {
	hostname s3
	!
	interface eth0
	 ipv6 address 2001:2::10/64
	 ip address 10.0.2.10/24
	!
    }
    canvas c1
    iconcoords {1031.0 383.0}
    labelcoords {1031.0 415.0}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', '/var/www/example.txt', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/etc/apache2/apache2.conf
	custom-command /etc/apache2/apache2.conf
	config {
	# apache2.conf generated by utility.py:HttpService
	Mutex file:${APACHE_LOCK_DIR} default
	PidFile ${APACHE_PID_FILE}
	Timeout 300
	KeepAlive On
	MaxKeepAliveRequests 100
	KeepAliveTimeout 5
	LoadModule mpm_worker_module /usr/lib/apache2/modules/mod_mpm_worker.so
	
	<IfModule mpm_prefork_module>
	    StartServers          5
	    MinSpareServers       5
	    MaxSpareServers      10
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	<IfModule mpm_worker_module>
	    StartServers          2
	    MinSpareThreads      25
	    MaxSpareThreads      75
	    ThreadLimit          64
	    ThreadsPerChild      25
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	<IfModule mpm_event_module>
	    StartServers          2
	    MinSpareThreads      25
	    MaxSpareThreads      75
	    ThreadLimit          64
	    ThreadsPerChild      25
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	User ${APACHE_RUN_USER}
	Group ${APACHE_RUN_GROUP}
	
	AccessFileName .htaccess
	
	<Files ~ "^\.ht">
	    Require all denied
	</Files>
	
	DefaultType None
	
	HostnameLookups Off
	
	ErrorLog ${APACHE_LOG_DIR}/error.log
	LogLevel warn
	
	#Include mods-enabled/*.load
	#Include mods-enabled/*.conf
	LoadModule alias_module /usr/lib/apache2/modules/mod_alias.so
	LoadModule auth_basic_module /usr/lib/apache2/modules/mod_auth_basic.so
	LoadModule authz_core_module /usr/lib/apache2/modules/mod_authz_core.so
	LoadModule authz_host_module /usr/lib/apache2/modules/mod_authz_host.so
	LoadModule authz_user_module /usr/lib/apache2/modules/mod_authz_user.so
	LoadModule autoindex_module /usr/lib/apache2/modules/mod_autoindex.so
	LoadModule dir_module /usr/lib/apache2/modules/mod_dir.so
	LoadModule env_module /usr/lib/apache2/modules/mod_env.so
	
	NameVirtualHost *:80
	Listen 80
	
	<IfModule mod_ssl.c>
	    Listen 443
	</IfModule>
	<IfModule mod_gnutls.c>
	    Listen 443
	</IfModule>
	
	LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
	LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
	LogFormat "%h %l %u %t \"%r\" %>s %O" common
	LogFormat "%{Referer}i -> %U" referer
	LogFormat "%{User-agent}i" agent
	
	ServerTokens OS
	ServerSignature On
	TraceEnable Off
	
	<VirtualHost *:80>
	    ServerAdmin webmaster@localhost
	    DocumentRoot /var/www
	    <Directory />
	        Options FollowSymLinks
	        AllowOverride None
	    </Directory>
	    <Directory /var/www/>
	        Options Indexes FollowSymLinks MultiViews
	        AllowOverride All
			Require all granted
	    </Directory>
	    <Directory /var/www/uploads>
	    	Options +Indexes
	    	AllowOverride None
	    	Require all granted
	    	<LimitExcept GET POST PUT>
	        		Require all granted
	    	</LimitExcept>
	    </Directory>
	    ErrorLog ${APACHE_LOG_DIR}/error.log
	    LogLevel warn
	    CustomLog ${APACHE_LOG_DIR}/access.log combined
	</VirtualHost>
	
	}
    }
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	files=('vsftpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	write_enable=YES
	anon_upload_enable=YES
	anon_mkdir_write_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	
	}
    }
    services {DefaultRoute FTP HTTP SSH}
}

node n21 {
    type router
    model host
    network-config {
	hostname s4
	!
	interface eth0
	 ipv6 address 2001:3::10/64
	 ip address 10.0.3.10/24
	!
    }
    canvas c1
    iconcoords {1033.0 529.0}
    labelcoords {1033.0 561.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:FTP
	custom-command FTP
	config {
	files=('vsftpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:FTP:vsftpd.conf
	custom-command vsftpd.conf
	config {
	
	# vsftpd.conf auto-generated by FTP service (utility.py)
	listen=YES
	anonymous_enable=YES
	local_enable=YES
	dirmessage_enable=YES
	use_localtime=YES
	xferlog_enable=YES
	write_enable=YES
	anon_upload_enable=YES
	anon_mkdir_write_enable=YES
	connect_from_port_20=YES
	xferlog_file=/var/log/vsftpd.log
	ftpd_banner=Welcome to the CORE FTP service
	secure_chroot_dir=/var/run/vsftpd/empty
	anon_root=/var/ftp
	
	}
    }
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', '/var/www/example.txt', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/etc/apache2/apache2.conf
	custom-command /etc/apache2/apache2.conf
	config {
	# apache2.conf generated by utility.py:HttpService
	Mutex file:${APACHE_LOCK_DIR} default
	PidFile ${APACHE_PID_FILE}
	Timeout 300
	KeepAlive On
	MaxKeepAliveRequests 100
	KeepAliveTimeout 5
	LoadModule mpm_worker_module /usr/lib/apache2/modules/mod_mpm_worker.so
	
	<IfModule mpm_prefork_module>
	    StartServers          5
	    MinSpareServers       5
	    MaxSpareServers      10
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	<IfModule mpm_worker_module>
	    StartServers          2
	    MinSpareThreads      25
	    MaxSpareThreads      75
	    ThreadLimit          64
	    ThreadsPerChild      25
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	<IfModule mpm_event_module>
	    StartServers          2
	    MinSpareThreads      25
	    MaxSpareThreads      75
	    ThreadLimit          64
	    ThreadsPerChild      25
	    MaxClients          150
	    MaxRequestsPerChild   0
	</IfModule>
	
	User ${APACHE_RUN_USER}
	Group ${APACHE_RUN_GROUP}
	
	AccessFileName .htaccess
	
	<Files ~ "^\.ht">
	    Require all denied
	</Files>
	
	DefaultType None
	
	HostnameLookups Off
	
	ErrorLog ${APACHE_LOG_DIR}/error.log
	LogLevel warn
	
	#Include mods-enabled/*.load
	#Include mods-enabled/*.conf
	LoadModule alias_module /usr/lib/apache2/modules/mod_alias.so
	LoadModule auth_basic_module /usr/lib/apache2/modules/mod_auth_basic.so
	LoadModule authz_core_module /usr/lib/apache2/modules/mod_authz_core.so
	LoadModule authz_host_module /usr/lib/apache2/modules/mod_authz_host.so
	LoadModule authz_user_module /usr/lib/apache2/modules/mod_authz_user.so
	LoadModule autoindex_module /usr/lib/apache2/modules/mod_autoindex.so
	LoadModule dir_module /usr/lib/apache2/modules/mod_dir.so
	LoadModule env_module /usr/lib/apache2/modules/mod_env.so
	
	NameVirtualHost *:80
	Listen 80
	
	<IfModule mod_ssl.c>
	    Listen 443
	</IfModule>
	<IfModule mod_gnutls.c>
	    Listen 443
	</IfModule>
	
	LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
	LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
	LogFormat "%h %l %u %t \"%r\" %>s %O" common
	LogFormat "%{Referer}i -> %U" referer
	LogFormat "%{User-agent}i" agent
	
	ServerTokens OS
	ServerSignature On
	TraceEnable Off
	
	<VirtualHost *:80>
	    ServerAdmin webmaster@localhost
	    DocumentRoot /var/www
	    <Directory />
	        Options FollowSymLinks
	        AllowOverride None
	    </Directory>
	    <Directory /var/www/>
	        Options Indexes FollowSymLinks MultiViews
	        AllowOverride All
			Require all granted
	    </Directory>
	    <Directory /var/www/uploads>
	    	Options +Indexes
	    	AllowOverride None
	    	Require all granted
	    	<LimitExcept GET POST PUT>
	        		Require all granted
	    	</LimitExcept>
	    </Directory>
	    ErrorLog ${APACHE_LOG_DIR}/error.log
	    LogLevel warn
	    CustomLog ${APACHE_LOG_DIR}/access.log combined
	</VirtualHost>
	
	}
    }
    services {DefaultRoute FTP HTTP SSH}
}

node n22 {
    type router
    model PC
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.22.21/24
	 ipv6 address 2001:22::21/64
	!
    }
    canvas c1
    iconcoords {336.0 358.0}
    labelcoords {336.0 390.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:atd
	custom-command atd
	config {
	files=('startatd.sh', )
	}
    }
    custom-config {
	custom-config-id service:atd:startatd.sh
	custom-command startatd.sh
	config {
	
	#!/bin/bash
	
	while true; do
	    curl -o /tmp/test-$(date +%s).txt 10.0.1.10/example.txt
	    curl -o /tmp/test-$(date +%s).txt 10.0.3.10/example.txt
	    sleep 5
	done
	
	}
    }
    services {atd DefaultRoute}
}

node n23 {
    type router
    model router
    network-config {
	hostname r0
	!
	interface eth3
	 ip address 10.0.22.2/24
	 ipv6 address 2001:22::2/64
	!
	interface eth2
	 ip address 10.0.25.1/24
	 ipv6 address 2001:25::1/64
	!
	interface eth1
	 ip address 10.0.24.1/24
	 ipv6 address 2001:24::1/64
	!
	interface eth0
	 ip address 10.0.23.1/24
	 ipv6 address 2001:23::1/64
	!
    }
    canvas c1
    iconcoords {452.0 318.0}
    labelcoords {452.0 350.0}
    interface-peer {eth0 n14}
    interface-peer {eth1 n13}
    interface-peer {eth2 n15}
    interface-peer {eth3 n1}
    services {FRROpenFabric FRRzebra IPForward}
}

link l1 {
    nodes {n6 n2}
}

link l2 {
    nodes {n6 n3}
    bandwidth 0
}

link l3 {
    nodes {n6 n4}
    bandwidth 0
}

link l4 {
    nodes {n6 n5}
    bandwidth 0
}

link l5 {
    nodes {n7 n2}
    bandwidth 0
}

link l6 {
    nodes {n7 n3}
    bandwidth 0
}

link l7 {
    nodes {n7 n4}
    bandwidth 0
}

link l8 {
    nodes {n7 n5}
    bandwidth 0
}

link l9 {
    nodes {n8 n2}
    bandwidth 0
}

link l10 {
    nodes {n8 n3}
    bandwidth 0
}

link l11 {
    nodes {n8 n4}
    bandwidth 0
}

link l12 {
    nodes {n8 n5}
    bandwidth 0
}

link l13 {
    nodes {n9 n5}
    bandwidth 0
}

link l14 {
    nodes {n9 n4}
    bandwidth 0
}

link l15 {
    nodes {n9 n2}
    bandwidth 0
}

link l16 {
    nodes {n9 n3}
    bandwidth 0
}

link l17 {
    nodes {n12 n8}
    bandwidth 0
}

link l18 {
    nodes {n12 n9}
    bandwidth 0
}

link l19 {
    nodes {n11 n7}
    bandwidth 0
}

link l20 {
    nodes {n11 n8}
    bandwidth 0
}

link l21 {
    nodes {n10 n6}
    bandwidth 0
}

link l22 {
    nodes {n10 n7}
    bandwidth 0
}

link l23 {
    nodes {n10 n8}
    bandwidth 0
}

link l24 {
    nodes {n11 n6}
    bandwidth 0
}

link l25 {
    nodes {n12 n7}
    bandwidth 0
}

link l26 {
    nodes {n15 n11}
    bandwidth 0
}

link l27 {
    nodes {n15 n10}
    bandwidth 0
}

link l28 {
    nodes {n14 n12}
    bandwidth 0
}

link l29 {
    nodes {n14 n11}
    bandwidth 0
}

link l30 {
    nodes {n13 n10}
    bandwidth 0
}

link l31 {
    nodes {n13 n12}
    bandwidth 0
}

link l32 {
    nodes {n16 n14}
    bandwidth 0
}

link l33 {
    nodes {n16 n13}
    bandwidth 0
}

link l34 {
    nodes {n16 n15}
    bandwidth 0
}

link l35 {
    nodes {n1 n16}
    bandwidth 0
}

link l36 {
    nodes {n17 n1}
    bandwidth 0
}

link l37 {
    nodes {n2 n18}
    bandwidth 0
}

link l38 {
    nodes {n3 n19}
    bandwidth 0
}

link l39 {
    nodes {n4 n20}
    bandwidth 0
}

link l40 {
    nodes {n5 n21}
    bandwidth 0
}

link l41 {
    nodes {n22 n1}
    bandwidth 0
}

link l42 {
    nodes {n23 n14}
    bandwidth 0
}

link l43 {
    nodes {n23 n13}
    bandwidth 0
}

link l44 {
    nodes {n23 n15}
    bandwidth 0
}

link l45 {
    nodes {n1 n23}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
    refpt {0 0 47.5791667 -122.132322 2.0}
    scale 150.0
    size {1500 750}
}

option global {
    interface_names no
    ip_addresses no
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

